{"ast":null,"code":"var _jsxFileName = \"/Users/rahul.bhardwaj/Documents/Personal/FlashCards/src/components/AIQuestionGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { X, Sparkles, Loader2, CheckCircle, AlertCircle } from 'lucide-react';\nimport './AIQuestionGenerator.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIQuestionGenerator = ({\n  topic,\n  onGenerate,\n  onCancel\n}) => {\n  _s();\n  const [apiKey, setApiKey] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('intermediate');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState('');\n  const [generatedCards, setGeneratedCards] = useState([]);\n  const handleGenerate = async () => {\n    if (!apiKey.trim()) {\n      setError('Please enter your OpenAI API key');\n      return;\n    }\n    setIsGenerating(true);\n    setError('');\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'system',\n            content: `You are an expert educator creating flashcards for learning. Create ${numberOfQuestions} high-quality flashcards about \"${topic.name}\". \n\nEach flashcard should have:\n1. A clear, concise question\n2. A helpful hint that guides the learner\n3. A comprehensive answer that explains the concept\n\nFormat your response as a clean JSON array with objects containing exactly these fields:\n{\n  \"question\": \"Your question here\",\n  \"hint\": \"Your hint here\", \n  \"answer\": \"Your answer here\"\n}\n\nDo not include any extra text, explanations, or formatting outside the JSON array.`\n          }, {\n            role: 'user',\n            content: `Create ${numberOfQuestions} flashcards about \"${topic.name}\" with ${difficulty} difficulty level. Focus on practical concepts and real-world applications. Return only the JSON array.`\n          }],\n          temperature: 0.7,\n          max_tokens: 2000\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`);\n      }\n      const data = await response.json();\n      const content = data.choices[0].message.content;\n\n      // Parse the JSON response\n      let parsedCards;\n      try {\n        // Clean the content to extract just the JSON\n        const cleanedContent = cleanAIResponse(content);\n        parsedCards = JSON.parse(cleanedContent);\n      } catch (parseError) {\n        console.log('JSON parsing failed, trying fallback:', parseError);\n        // If JSON parsing fails, try to extract content manually\n        parsedCards = extractCardsFromText(content, topic.name);\n      }\n      if (Array.isArray(parsedCards) && parsedCards.length > 0) {\n        const formattedCards = parsedCards.map((card, index) => ({\n          id: `ai-${Date.now()}-${index}`,\n          question: cleanText(card.question || `AI Generated Question ${index + 1}`),\n          hint: cleanText(card.hint || 'Use your knowledge to answer this question.'),\n          answer: cleanText(card.answer || 'AI generated answer will appear here.')\n        }));\n        setGeneratedCards(formattedCards);\n      } else {\n        throw new Error('Failed to generate valid flashcards');\n      }\n    } catch (err) {\n      setError(`Generation failed: ${err.message}`);\n      console.error('AI Generation Error:', err);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const cleanAIResponse = content => {\n    // Remove any markdown formatting\n    let cleaned = content.replace(/```json/g, '').replace(/```/g, '');\n\n    // Find the first { and last } to extract just the JSON\n    const firstBrace = cleaned.indexOf('{');\n    const lastBrace = cleaned.lastIndexOf('}');\n    if (firstBrace !== -1 && lastBrace !== -1) {\n      cleaned = cleaned.substring(firstBrace, lastBrace + 1);\n    }\n\n    // Remove any extra text before or after the JSON\n    cleaned = cleaned.trim();\n    return cleaned;\n  };\n  const cleanText = text => {\n    if (!text) return '';\n\n    // Remove quotes and extra formatting\n    let cleaned = text.toString();\n\n    // Remove surrounding quotes if they exist\n    if (cleaned.startsWith('\"') && cleaned.endsWith('\"') || cleaned.startsWith(\"'\") && cleaned.endsWith(\"'\")) {\n      cleaned = cleaned.slice(1, -1);\n    }\n\n    // Remove field labels like \"question:\", \"hint:\", \"answer:\"\n    cleaned = cleaned.replace(/^(question|hint|answer):\\s*/i, '');\n\n    // Clean up any remaining formatting\n    cleaned = cleaned.replace(/\\\\n/g, '\\n').replace(/\\\\\"/g, '\"');\n    return cleaned.trim();\n  };\n  const extractCardsFromText = (text, topicName) => {\n    // Fallback method to extract cards if JSON parsing fails\n    const lines = text.split('\\n').filter(line => line.trim());\n    const cards = [];\n\n    // Look for patterns like \"question:\", \"hint:\", \"answer:\" in the text\n    let currentCard = {};\n    let currentField = '';\n    for (const line of lines) {\n      const trimmedLine = line.trim();\n      if (trimmedLine.toLowerCase().includes('question:')) {\n        if (Object.keys(currentCard).length > 0) {\n          cards.push(currentCard);\n        }\n        currentCard = {\n          question: '',\n          hint: '',\n          answer: ''\n        };\n        currentField = 'question';\n        currentCard.question = trimmedLine.replace(/^.*?question:\\s*/i, '').trim();\n      } else if (trimmedLine.toLowerCase().includes('hint:')) {\n        currentField = 'hint';\n        currentCard.hint = trimmedLine.replace(/^.*?hint:\\s*/i, '').trim();\n      } else if (trimmedLine.toLowerCase().includes('answer:')) {\n        currentField = 'answer';\n        currentCard.answer = trimmedLine.replace(/^.*?answer:\\s*/i, '').trim();\n      } else if (currentField && trimmedLine) {\n        // Continue building the current field\n        currentCard[currentField] += (currentCard[currentField] ? ' ' : '') + trimmedLine;\n      }\n    }\n\n    // Add the last card if it exists\n    if (Object.keys(currentCard).length > 0 && currentCard.question) {\n      cards.push(currentCard);\n    }\n\n    // If we still don't have cards, create some basic ones\n    if (cards.length === 0) {\n      for (let i = 0; i < Math.min(numberOfQuestions, lines.length); i++) {\n        cards.push({\n          question: lines[i] || `Question about ${topicName}`,\n          hint: `Hint for question ${i + 1}`,\n          answer: `Answer for question ${i + 1}`\n        });\n      }\n    }\n    return cards;\n  };\n  const handleConfirm = () => {\n    if (generatedCards.length > 0) {\n      onGenerate(topic.id, generatedCards);\n    }\n  };\n  const handleRegenerate = () => {\n    setGeneratedCards([]);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"ai-generator-overlay\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"ai-generator-modal\",\n      initial: {\n        scale: 0.8,\n        opacity: 0\n      },\n      animate: {\n        scale: 1,\n        opacity: 1\n      },\n      exit: {\n        scale: 0.8,\n        opacity: 0\n      },\n      transition: {\n        type: \"spring\",\n        damping: 25,\n        stiffness: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-generator-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-generator-title\",\n          children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create with AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onCancel,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-generator-content\",\n        children: generatedCards.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-generator-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"apiKey\",\n                children: \"OpenAI API Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"apiKey\",\n                value: apiKey,\n                onChange: e => setApiKey(e.target.value),\n                placeholder: \"sk-...\",\n                className: \"api-key-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Your API key is stored locally and never sent to our servers.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"numberOfQuestions\",\n                  children: \"Number of Questions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"numberOfQuestions\",\n                  value: numberOfQuestions,\n                  onChange: e => setNumberOfQuestions(Number(e.target.value)),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 3,\n                    children: \"3 Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 5,\n                    children: \"5 Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 8,\n                    children: \"8 Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 10,\n                    children: \"10 Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"difficulty\",\n                  children: \"Difficulty Level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"difficulty\",\n                  value: difficulty,\n                  onChange: e => setDifficulty(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"beginner\",\n                    children: \"Beginner\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"intermediate\",\n                    children: \"Intermediate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"advanced\",\n                    children: \"Advanced\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this), error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"generate-btn\",\n              onClick: handleGenerate,\n              disabled: isGenerating || !apiKey.trim(),\n              children: isGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                  size: 16,\n                  className: \"spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this), \"Generating...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this), \"Generate Questions\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-cards\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"generated-cards-header\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              size: 20,\n              className: \"success-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Generated \", generatedCards.length, \" Flashcards\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards-preview\",\n            children: generatedCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-preview-header\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"card-number\",\n                  children: [\"#\", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-preview-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [\"Q: \", card.question]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Hint:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 26\n                  }, this), \" \", card.hint]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"A:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 26\n                  }, this), \" \", card.answer]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this)]\n            }, card.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"generated-cards-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"regenerate-btn\",\n              onClick: handleRegenerate,\n              children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), \"Regenerate\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"confirm-btn\",\n              onClick: handleConfirm,\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), \"Add to Topic\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(AIQuestionGenerator, \"nNzKotDMaPPxW8PB4pavf69Sf8Q=\");\n_c = AIQuestionGenerator;\nexport default AIQuestionGenerator;\nvar _c;\n$RefreshReg$(_c, \"AIQuestionGenerator\");","map":{"version":3,"names":["React","useState","motion","AnimatePresence","X","Sparkles","Loader2","CheckCircle","AlertCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","AIQuestionGenerator","topic","onGenerate","onCancel","_s","apiKey","setApiKey","numberOfQuestions","setNumberOfQuestions","difficulty","setDifficulty","isGenerating","setIsGenerating","error","setError","generatedCards","setGeneratedCards","handleGenerate","trim","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","name","temperature","max_tokens","ok","Error","status","data","json","choices","message","parsedCards","cleanedContent","cleanAIResponse","parse","parseError","console","log","extractCardsFromText","Array","isArray","length","formattedCards","map","card","index","id","Date","now","question","cleanText","hint","answer","err","cleaned","replace","firstBrace","indexOf","lastBrace","lastIndexOf","substring","text","toString","startsWith","endsWith","slice","topicName","lines","split","filter","line","cards","currentCard","currentField","trimmedLine","toLowerCase","includes","Object","keys","push","i","Math","min","handleConfirm","handleRegenerate","div","className","initial","opacity","animate","exit","children","scale","transition","type","damping","stiffness","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","value","onChange","e","target","placeholder","Number","disabled","_c","$RefreshReg$"],"sources":["/Users/rahul.bhardwaj/Documents/Personal/FlashCards/src/components/AIQuestionGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { X, Sparkles, Loader2, CheckCircle, AlertCircle } from 'lucide-react';\nimport './AIQuestionGenerator.css';\n\nconst AIQuestionGenerator = ({ topic, onGenerate, onCancel }) => {\n  const [apiKey, setApiKey] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('intermediate');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState('');\n  const [generatedCards, setGeneratedCards] = useState([]);\n\n  const handleGenerate = async () => {\n    if (!apiKey.trim()) {\n      setError('Please enter your OpenAI API key');\n      return;\n    }\n\n    setIsGenerating(true);\n    setError('');\n\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [\n            {\n              role: 'system',\n              content: `You are an expert educator creating flashcards for learning. Create ${numberOfQuestions} high-quality flashcards about \"${topic.name}\". \n\nEach flashcard should have:\n1. A clear, concise question\n2. A helpful hint that guides the learner\n3. A comprehensive answer that explains the concept\n\nFormat your response as a clean JSON array with objects containing exactly these fields:\n{\n  \"question\": \"Your question here\",\n  \"hint\": \"Your hint here\", \n  \"answer\": \"Your answer here\"\n}\n\nDo not include any extra text, explanations, or formatting outside the JSON array.`\n            },\n            {\n              role: 'user',\n              content: `Create ${numberOfQuestions} flashcards about \"${topic.name}\" with ${difficulty} difficulty level. Focus on practical concepts and real-world applications. Return only the JSON array.`\n            }\n          ],\n          temperature: 0.7,\n          max_tokens: 2000\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const content = data.choices[0].message.content;\n      \n      // Parse the JSON response\n      let parsedCards;\n      try {\n        // Clean the content to extract just the JSON\n        const cleanedContent = cleanAIResponse(content);\n        parsedCards = JSON.parse(cleanedContent);\n      } catch (parseError) {\n        console.log('JSON parsing failed, trying fallback:', parseError);\n        // If JSON parsing fails, try to extract content manually\n        parsedCards = extractCardsFromText(content, topic.name);\n      }\n\n      if (Array.isArray(parsedCards) && parsedCards.length > 0) {\n        const formattedCards = parsedCards.map((card, index) => ({\n          id: `ai-${Date.now()}-${index}`,\n          question: cleanText(card.question || `AI Generated Question ${index + 1}`),\n          hint: cleanText(card.hint || 'Use your knowledge to answer this question.'),\n          answer: cleanText(card.answer || 'AI generated answer will appear here.')\n        }));\n\n        setGeneratedCards(formattedCards);\n      } else {\n        throw new Error('Failed to generate valid flashcards');\n      }\n\n    } catch (err) {\n      setError(`Generation failed: ${err.message}`);\n      console.error('AI Generation Error:', err);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const cleanAIResponse = (content) => {\n    // Remove any markdown formatting\n    let cleaned = content.replace(/```json/g, '').replace(/```/g, '');\n    \n    // Find the first { and last } to extract just the JSON\n    const firstBrace = cleaned.indexOf('{');\n    const lastBrace = cleaned.lastIndexOf('}');\n    \n    if (firstBrace !== -1 && lastBrace !== -1) {\n      cleaned = cleaned.substring(firstBrace, lastBrace + 1);\n    }\n    \n    // Remove any extra text before or after the JSON\n    cleaned = cleaned.trim();\n    \n    return cleaned;\n  };\n\n  const cleanText = (text) => {\n    if (!text) return '';\n    \n    // Remove quotes and extra formatting\n    let cleaned = text.toString();\n    \n    // Remove surrounding quotes if they exist\n    if ((cleaned.startsWith('\"') && cleaned.endsWith('\"')) || \n        (cleaned.startsWith(\"'\") && cleaned.endsWith(\"'\"))) {\n      cleaned = cleaned.slice(1, -1);\n    }\n    \n    // Remove field labels like \"question:\", \"hint:\", \"answer:\"\n    cleaned = cleaned.replace(/^(question|hint|answer):\\s*/i, '');\n    \n    // Clean up any remaining formatting\n    cleaned = cleaned.replace(/\\\\n/g, '\\n').replace(/\\\\\"/g, '\"');\n    \n    return cleaned.trim();\n  };\n\n  const extractCardsFromText = (text, topicName) => {\n    // Fallback method to extract cards if JSON parsing fails\n    const lines = text.split('\\n').filter(line => line.trim());\n    const cards = [];\n    \n    // Look for patterns like \"question:\", \"hint:\", \"answer:\" in the text\n    let currentCard = {};\n    let currentField = '';\n    \n    for (const line of lines) {\n      const trimmedLine = line.trim();\n      \n      if (trimmedLine.toLowerCase().includes('question:')) {\n        if (Object.keys(currentCard).length > 0) {\n          cards.push(currentCard);\n        }\n        currentCard = { question: '', hint: '', answer: '' };\n        currentField = 'question';\n        currentCard.question = trimmedLine.replace(/^.*?question:\\s*/i, '').trim();\n      } else if (trimmedLine.toLowerCase().includes('hint:')) {\n        currentField = 'hint';\n        currentCard.hint = trimmedLine.replace(/^.*?hint:\\s*/i, '').trim();\n      } else if (trimmedLine.toLowerCase().includes('answer:')) {\n        currentField = 'answer';\n        currentCard.answer = trimmedLine.replace(/^.*?answer:\\s*/i, '').trim();\n      } else if (currentField && trimmedLine) {\n        // Continue building the current field\n        currentCard[currentField] += (currentCard[currentField] ? ' ' : '') + trimmedLine;\n      }\n    }\n    \n    // Add the last card if it exists\n    if (Object.keys(currentCard).length > 0 && currentCard.question) {\n      cards.push(currentCard);\n    }\n    \n    // If we still don't have cards, create some basic ones\n    if (cards.length === 0) {\n      for (let i = 0; i < Math.min(numberOfQuestions, lines.length); i++) {\n        cards.push({\n          question: lines[i] || `Question about ${topicName}`,\n          hint: `Hint for question ${i + 1}`,\n          answer: `Answer for question ${i + 1}`\n        });\n      }\n    }\n    \n    return cards;\n  };\n\n  const handleConfirm = () => {\n    if (generatedCards.length > 0) {\n      onGenerate(topic.id, generatedCards);\n    }\n  };\n\n  const handleRegenerate = () => {\n    setGeneratedCards([]);\n    setError('');\n  };\n\n  return (\n    <motion.div\n      className=\"ai-generator-overlay\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <motion.div\n        className=\"ai-generator-modal\"\n        initial={{ scale: 0.8, opacity: 0 }}\n        animate={{ scale: 1, opacity: 1 }}\n        exit={{ scale: 0.8, opacity: 0 }}\n        transition={{ type: \"spring\", damping: 25, stiffness: 300 }}\n      >\n        <div className=\"ai-generator-header\">\n          <div className=\"ai-generator-title\">\n            <Sparkles size={24} />\n            <h2>Create with AI</h2>\n          </div>\n          <button className=\"close-btn\" onClick={onCancel}>\n            <X size={20} />\n          </button>\n        </div>\n\n        <div className=\"ai-generator-content\">\n          {generatedCards.length === 0 ? (\n            <>\n              <div className=\"ai-generator-form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"apiKey\">OpenAI API Key</label>\n                  <input\n                    type=\"password\"\n                    id=\"apiKey\"\n                    value={apiKey}\n                    onChange={(e) => setApiKey(e.target.value)}\n                    placeholder=\"sk-...\"\n                    className=\"api-key-input\"\n                  />\n                  <small>\n                    Your API key is stored locally and never sent to our servers.\n                  </small>\n                </div>\n\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"numberOfQuestions\">Number of Questions</label>\n                    <select\n                      id=\"numberOfQuestions\"\n                      value={numberOfQuestions}\n                      onChange={(e) => setNumberOfQuestions(Number(e.target.value))}\n                    >\n                      <option value={3}>3 Questions</option>\n                      <option value={5}>5 Questions</option>\n                      <option value={8}>8 Questions</option>\n                      <option value={10}>10 Questions</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"difficulty\">Difficulty Level</label>\n                    <select\n                      id=\"difficulty\"\n                      value={difficulty}\n                      onChange={(e) => setDifficulty(e.target.value)}\n                    >\n                      <option value=\"beginner\">Beginner</option>\n                      <option value=\"intermediate\">Intermediate</option>\n                      <option value=\"advanced\">Advanced</option>\n                    </select>\n                  </div>\n                </div>\n\n                {error && (\n                  <div className=\"error-message\">\n                    <AlertCircle size={16} />\n                    {error}\n                  </div>\n                )}\n\n                <button\n                  className=\"generate-btn\"\n                  onClick={handleGenerate}\n                  disabled={isGenerating || !apiKey.trim()}\n                >\n                  {isGenerating ? (\n                    <>\n                      <Loader2 size={16} className=\"spinner\" />\n                      Generating...\n                    </>\n                  ) : (\n                    <>\n                      <Sparkles size={16} />\n                      Generate Questions\n                    </>\n                  )}\n                </button>\n              </div>\n            </>\n          ) : (\n            <div className=\"generated-cards\">\n              <div className=\"generated-cards-header\">\n                <CheckCircle size={20} className=\"success-icon\" />\n                <h3>Generated {generatedCards.length} Flashcards</h3>\n              </div>\n              \n              <div className=\"cards-preview\">\n                {generatedCards.map((card, index) => (\n                  <div key={card.id} className=\"card-preview\">\n                    <div className=\"card-preview-header\">\n                      <span className=\"card-number\">#{index + 1}</span>\n                    </div>\n                    <div className=\"card-preview-content\">\n                      <h4>Q: {card.question}</h4>\n                      <p><strong>Hint:</strong> {card.hint}</p>\n                      <p><strong>A:</strong> {card.answer}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"generated-cards-actions\">\n                <button className=\"regenerate-btn\" onClick={handleRegenerate}>\n                  <Sparkles size={16} />\n                  Regenerate\n                </button>\n                <button className=\"confirm-btn\" onClick={handleConfirm}>\n                  <CheckCircle size={16} />\n                  Add to Topic\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default AIQuestionGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}