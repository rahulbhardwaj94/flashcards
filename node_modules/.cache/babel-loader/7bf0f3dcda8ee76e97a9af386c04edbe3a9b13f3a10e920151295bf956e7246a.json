{"ast":null,"code":"var _jsxFileName = \"/Users/rahul.bhardwaj/Documents/Personal/FlashCards/src/components/AIQuestionGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { X, Sparkles, Loader2, CheckCircle, AlertCircle } from 'lucide-react';\nimport './AIQuestionGenerator.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIQuestionGenerator = ({\n  topic,\n  onGenerate,\n  onCancel\n}) => {\n  _s();\n  const [apiKey, setApiKey] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('intermediate');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState('');\n  const [generatedCards, setGeneratedCards] = useState([]);\n  const handleGenerate = async () => {\n    if (!apiKey.trim()) {\n      setError('Please enter your OpenAI API key');\n      return;\n    }\n    setIsGenerating(true);\n    setError('');\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'system',\n            content: `You are an expert educator creating flashcards for learning. Create ${numberOfQuestions} high-quality flashcards about \"${topic.name}\". Each flashcard should have a clear question, a helpful hint, and a comprehensive answer. Format your response as a JSON array with objects containing: question, hint, and answer fields.`\n          }, {\n            role: 'user',\n            content: `Create ${numberOfQuestions} flashcards about \"${topic.name}\" with ${difficulty} difficulty level. Focus on practical concepts and real-world applications.`\n          }],\n          temperature: 0.7,\n          max_tokens: 2000\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`);\n      }\n      const data = await response.json();\n      const content = data.choices[0].message.content;\n\n      // Parse the JSON response\n      let parsedCards;\n      try {\n        parsedCards = JSON.parse(content);\n      } catch (parseError) {\n        // If JSON parsing fails, try to extract content manually\n        parsedCards = extractCardsFromText(content, topic.name);\n      }\n      if (Array.isArray(parsedCards) && parsedCards.length > 0) {\n        const formattedCards = parsedCards.map((card, index) => ({\n          id: `ai-${Date.now()}-${index}`,\n          question: card.question || `AI Generated Question ${index + 1}`,\n          hint: card.hint || 'Use your knowledge to answer this question.',\n          answer: card.answer || 'AI generated answer will appear here.'\n        }));\n        setGeneratedCards(formattedCards);\n      } else {\n        throw new Error('Failed to generate valid flashcards');\n      }\n    } catch (err) {\n      setError(`Generation failed: ${err.message}`);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const extractCardsFromText = (text, topicName) => {\n    // Fallback method to extract cards if JSON parsing fails\n    const lines = text.split('\\n').filter(line => line.trim());\n    const cards = [];\n    for (let i = 0; i < Math.min(numberOfQuestions, lines.length); i++) {\n      cards.push({\n        question: lines[i] || `Question about ${topicName}`,\n        hint: `Hint for question ${i + 1}`,\n        answer: `Answer for question ${i + 1}`\n      });\n    }\n    return cards;\n  };\n  const handleConfirm = () => {\n    if (generatedCards.length > 0) {\n      onGenerate(topic.id, generatedCards);\n    }\n  };\n  const handleRegenerate = () => {\n    setGeneratedCards([]);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"ai-generator-overlay\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"ai-generator-modal\",\n      initial: {\n        scale: 0.8,\n        opacity: 0\n      },\n      animate: {\n        scale: 1,\n        opacity: 1\n      },\n      exit: {\n        scale: 0.8,\n        opacity: 0\n      },\n      transition: {\n        type: \"spring\",\n        damping: 25,\n        stiffness: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-generator-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-generator-title\",\n          children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create with AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onCancel,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-generator-content\",\n        children: generatedCards.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-generator-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"apiKey\",\n                children: \"OpenAI API Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"apiKey\",\n                value: apiKey,\n                onChange: e => setApiKey(e.target.value),\n                placeholder: \"sk-...\",\n                className: \"api-key-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Your API key is stored locally and never sent to our servers.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"numberOfQuestions\",\n                  children: \"Number of Questions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"numberOfQuestions\",\n                  value: numberOfQuestions,\n                  onChange: e => setNumberOfQuestions(Number(e.target.value)),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 3,\n                    children: \"3 Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 5,\n                    children: \"5 Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 8,\n                    children: \"8 Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 10,\n                    children: \"10 Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"difficulty\",\n                  children: \"Difficulty Level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"difficulty\",\n                  value: difficulty,\n                  onChange: e => setDifficulty(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"beginner\",\n                    children: \"Beginner\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"intermediate\",\n                    children: \"Intermediate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"advanced\",\n                    children: \"Advanced\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"generate-btn\",\n              onClick: handleGenerate,\n              disabled: isGenerating || !apiKey.trim(),\n              children: isGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                  size: 16,\n                  className: \"spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this), \"Generating...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this), \"Generate Questions\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-cards\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"generated-cards-header\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              size: 20,\n              className: \"success-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Generated \", generatedCards.length, \" Flashcards\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards-preview\",\n            children: generatedCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-preview-header\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"card-number\",\n                  children: [\"#\", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-preview-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [\"Q: \", card.question]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Hint:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 26\n                  }, this), \" \", card.hint]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"A:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 26\n                  }, this), \" \", card.answer]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this)]\n            }, card.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"generated-cards-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"regenerate-btn\",\n              onClick: handleRegenerate,\n              children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this), \"Regenerate\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"confirm-btn\",\n              onClick: handleConfirm,\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), \"Add to Topic\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(AIQuestionGenerator, \"nNzKotDMaPPxW8PB4pavf69Sf8Q=\");\n_c = AIQuestionGenerator;\nexport default AIQuestionGenerator;\nvar _c;\n$RefreshReg$(_c, \"AIQuestionGenerator\");","map":{"version":3,"names":["React","useState","motion","AnimatePresence","X","Sparkles","Loader2","CheckCircle","AlertCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","AIQuestionGenerator","topic","onGenerate","onCancel","_s","apiKey","setApiKey","numberOfQuestions","setNumberOfQuestions","difficulty","setDifficulty","isGenerating","setIsGenerating","error","setError","generatedCards","setGeneratedCards","handleGenerate","trim","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","name","temperature","max_tokens","ok","Error","status","data","json","choices","message","parsedCards","parse","parseError","extractCardsFromText","Array","isArray","length","formattedCards","map","card","index","id","Date","now","question","hint","answer","err","text","topicName","lines","split","filter","line","cards","i","Math","min","push","handleConfirm","handleRegenerate","div","className","initial","opacity","animate","exit","children","scale","transition","type","damping","stiffness","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","value","onChange","e","target","placeholder","Number","disabled","_c","$RefreshReg$"],"sources":["/Users/rahul.bhardwaj/Documents/Personal/FlashCards/src/components/AIQuestionGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { X, Sparkles, Loader2, CheckCircle, AlertCircle } from 'lucide-react';\nimport './AIQuestionGenerator.css';\n\nconst AIQuestionGenerator = ({ topic, onGenerate, onCancel }) => {\n  const [apiKey, setApiKey] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('intermediate');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState('');\n  const [generatedCards, setGeneratedCards] = useState([]);\n\n  const handleGenerate = async () => {\n    if (!apiKey.trim()) {\n      setError('Please enter your OpenAI API key');\n      return;\n    }\n\n    setIsGenerating(true);\n    setError('');\n\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [\n            {\n              role: 'system',\n              content: `You are an expert educator creating flashcards for learning. Create ${numberOfQuestions} high-quality flashcards about \"${topic.name}\". Each flashcard should have a clear question, a helpful hint, and a comprehensive answer. Format your response as a JSON array with objects containing: question, hint, and answer fields.`\n            },\n            {\n              role: 'user',\n              content: `Create ${numberOfQuestions} flashcards about \"${topic.name}\" with ${difficulty} difficulty level. Focus on practical concepts and real-world applications.`\n            }\n          ],\n          temperature: 0.7,\n          max_tokens: 2000\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const content = data.choices[0].message.content;\n      \n      // Parse the JSON response\n      let parsedCards;\n      try {\n        parsedCards = JSON.parse(content);\n      } catch (parseError) {\n        // If JSON parsing fails, try to extract content manually\n        parsedCards = extractCardsFromText(content, topic.name);\n      }\n\n      if (Array.isArray(parsedCards) && parsedCards.length > 0) {\n        const formattedCards = parsedCards.map((card, index) => ({\n          id: `ai-${Date.now()}-${index}`,\n          question: card.question || `AI Generated Question ${index + 1}`,\n          hint: card.hint || 'Use your knowledge to answer this question.',\n          answer: card.answer || 'AI generated answer will appear here.'\n        }));\n\n        setGeneratedCards(formattedCards);\n      } else {\n        throw new Error('Failed to generate valid flashcards');\n      }\n\n    } catch (err) {\n      setError(`Generation failed: ${err.message}`);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const extractCardsFromText = (text, topicName) => {\n    // Fallback method to extract cards if JSON parsing fails\n    const lines = text.split('\\n').filter(line => line.trim());\n    const cards = [];\n    \n    for (let i = 0; i < Math.min(numberOfQuestions, lines.length); i++) {\n      cards.push({\n        question: lines[i] || `Question about ${topicName}`,\n        hint: `Hint for question ${i + 1}`,\n        answer: `Answer for question ${i + 1}`\n      });\n    }\n    \n    return cards;\n  };\n\n  const handleConfirm = () => {\n    if (generatedCards.length > 0) {\n      onGenerate(topic.id, generatedCards);\n    }\n  };\n\n  const handleRegenerate = () => {\n    setGeneratedCards([]);\n    setError('');\n  };\n\n  return (\n    <motion.div\n      className=\"ai-generator-overlay\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <motion.div\n        className=\"ai-generator-modal\"\n        initial={{ scale: 0.8, opacity: 0 }}\n        animate={{ scale: 1, opacity: 1 }}\n        exit={{ scale: 0.8, opacity: 0 }}\n        transition={{ type: \"spring\", damping: 25, stiffness: 300 }}\n      >\n        <div className=\"ai-generator-header\">\n          <div className=\"ai-generator-title\">\n            <Sparkles size={24} />\n            <h2>Create with AI</h2>\n          </div>\n          <button className=\"close-btn\" onClick={onCancel}>\n            <X size={20} />\n          </button>\n        </div>\n\n        <div className=\"ai-generator-content\">\n          {generatedCards.length === 0 ? (\n            <>\n              <div className=\"ai-generator-form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"apiKey\">OpenAI API Key</label>\n                  <input\n                    type=\"password\"\n                    id=\"apiKey\"\n                    value={apiKey}\n                    onChange={(e) => setApiKey(e.target.value)}\n                    placeholder=\"sk-...\"\n                    className=\"api-key-input\"\n                  />\n                  <small>\n                    Your API key is stored locally and never sent to our servers.\n                  </small>\n                </div>\n\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"numberOfQuestions\">Number of Questions</label>\n                    <select\n                      id=\"numberOfQuestions\"\n                      value={numberOfQuestions}\n                      onChange={(e) => setNumberOfQuestions(Number(e.target.value))}\n                    >\n                      <option value={3}>3 Questions</option>\n                      <option value={5}>5 Questions</option>\n                      <option value={8}>8 Questions</option>\n                      <option value={10}>10 Questions</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"difficulty\">Difficulty Level</label>\n                    <select\n                      id=\"difficulty\"\n                      value={difficulty}\n                      onChange={(e) => setDifficulty(e.target.value)}\n                    >\n                      <option value=\"beginner\">Beginner</option>\n                      <option value=\"intermediate\">Intermediate</option>\n                      <option value=\"advanced\">Advanced</option>\n                    </select>\n                  </div>\n                </div>\n\n                {error && (\n                  <div className=\"error-message\">\n                    <AlertCircle size={16} />\n                    {error}\n                  </div>\n                )}\n\n                <button\n                  className=\"generate-btn\"\n                  onClick={handleGenerate}\n                  disabled={isGenerating || !apiKey.trim()}\n                >\n                  {isGenerating ? (\n                    <>\n                      <Loader2 size={16} className=\"spinner\" />\n                      Generating...\n                    </>\n                  ) : (\n                    <>\n                      <Sparkles size={16} />\n                      Generate Questions\n                    </>\n                  )}\n                </button>\n              </div>\n            </>\n          ) : (\n            <div className=\"generated-cards\">\n              <div className=\"generated-cards-header\">\n                <CheckCircle size={20} className=\"success-icon\" />\n                <h3>Generated {generatedCards.length} Flashcards</h3>\n              </div>\n              \n              <div className=\"cards-preview\">\n                {generatedCards.map((card, index) => (\n                  <div key={card.id} className=\"card-preview\">\n                    <div className=\"card-preview-header\">\n                      <span className=\"card-number\">#{index + 1}</span>\n                    </div>\n                    <div className=\"card-preview-content\">\n                      <h4>Q: {card.question}</h4>\n                      <p><strong>Hint:</strong> {card.hint}</p>\n                      <p><strong>A:</strong> {card.answer}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"generated-cards-actions\">\n                <button className=\"regenerate-btn\" onClick={handleRegenerate}>\n                  <Sparkles size={16} />\n                  Regenerate\n                </button>\n                <button className=\"confirm-btn\" onClick={handleConfirm}>\n                  <CheckCircle size={16} />\n                  Add to Topic\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default AIQuestionGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}